[[plugins]]
repo = 'Shougo/denite.nvim'
on_event = 'BufNewFile'
hook_source = 'source ~/.config/nvim/plugins/denite.rc.vim'
hook_add = 'source ~/.config/nvim/plugins/denite.vim'


[[plugins]]
repo = 'Jagua/vim-denite-ghq'
on_source = 'denite.nvim'
[[plugins]]
repo = 'neoclide/denite-git'
on_source = 'denite.nvim'

[[plugins]]
repo = 'Shougo/neoyank.vim'
on_event = 'TextYankPost'
on_source = ['denite.nvim']

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'Shougo/deol.nvim'
on_source = 'denite.nvim'
hook_add = '''
  " nnoremap <silent> [Space]s :<C-u>Deol zsh -edit<CR>
  nnoremap <silent> [Window]D  :<C-u>call deol#kill_editor()<CR>
'''
hook_source = '''
  " let g:deol#prompt_pattern = '\w*%'
  let g:deol#prompt_pattern = '%'

  " Set to $PATH.
  let s:bin = dein#get('vim-themis').rtp . '/bin'

  function! s:split_envpath(path) abort
    let delimiter = has('win32') ? ';' : ':'
    if stridx(a:path, '\' . delimiter) < 0
      return split(a:path, delimiter)
    endif
    let split = split(a:path, '\\\@<!\%(\\\\\)*\zs' . delimiter)
    return map(split,'substitute(v:val, ''\\\([\\'
          \ . delimiter . ']\)'', "\\1", "g")')
  endfunction

  function! s:join_envpath(list, orig_path, add_path) abort
    let delimiter = has('win32') ? ';' : ':'
    return (stridx(a:orig_path, '\' . delimiter) < 0
          \ && stridx(a:add_path, delimiter) < 0) ?
          \   join(a:list, delimiter) :
          \   join(map(copy(a:list),
          \        "substitute(v:path, ',\\|\\\\,\\@=', '\\\\\\0', 'g')"),
          \        delimiter)
  endfunction

  let $PATH = s:join_envpath(
        \ dein#util#_uniq(insert(
        \    s:split_envpath($PATH), s:bin)), $PATH, s:bin)
  let $THEMIS_HOME = dein#get('vim-themis').rtp

  unlet s:bin
'''
[plugins.ftplugin]
deol = '''
nnoremap <buffer><silent> [Space]gc
\ :<C-u>call deol#send('git commit')<CR>
nnoremap <buffer><silent> [Space]gA
\ :<C-u>call deol#send('git commit --amend')<CR>
'''

[[plugins]]
repo = 'Shougo/junkfile.vim'
on_source = 'denite.nvim'
hook_add = '''
  nnoremap <silent> [Window]e :<C-u>Denite junkfile:new junkfile<CR>
'''

#[[plugins]]
#repo = "OmniSharp/omnisharp-vim"
#on_ft = ["cs"]
#build = "xbuild server/OmniSharp.sln"

[[plugins]]
repo = "cespare/vim-toml"
on_ft = ["toml"]

[[plugins]]
repo = "rhysd/vim-llvm"
on_ft = ["llvm"]
hook_source = '''
let g:llvm_extends_official = 0
'''
[[plugins]]
repo = 'rust-lang/rust.vim'
on_ft = 'rust'
hook_source = '''
let g:rustfmt_autosave = 1
'''

[[plugins]]
repo = 'lervag/vimtex'
on_ft = 'tex'
hook_source = '''
let g:vimtex_fold_envs = 0
let g:vimtex_view_general_viewer = 'mupdf'
'''

[[plugins]]
repo = 'elzr/vim-json'
on_ft = 'json'

[[plugins]]
repo = 'aitjcize/cppman'
on_ft = 'cpp'


#[[plugins]]
## neosnippet
#repo = 'Shougo/neosnippet.vim'
#hook_source = '''
#  if has('conceal')
#    set conceallevel=2 concealcursor=niv
#  endif
#  let g:neosnippet#snippets_directory='~/.config/nvim/snippets/'
#'''
#on_i  = 1
#on_ft = ['snippet']
#depends = ['neosnippet-snippets']

[[plugins]]
repo = 'Vimjas/vim-python-pep8-indent'
on_ft = 'python'

#[[plugins]]
#repo = 'kannokanno/previm'
#on_ft = 'markdown'

[[plugins]]
repo = 'sebwink/previm'
on_ft = 'markdown'
